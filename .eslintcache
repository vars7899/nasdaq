[{"D:\\main\\react-apps\\REACT\\react-app-1\\src\\index.js":"1","D:\\main\\react-apps\\REACT\\react-app-1\\src\\App.js":"2","D:\\main\\react-apps\\REACT\\react-app-1\\src\\components\\BubbleChart.js":"3","D:\\main\\react-apps\\REACT\\react-app-1\\src\\components\\Header.js":"4","D:\\main\\react-apps\\REACT\\react-app-1\\src\\components\\LineChart.js":"5"},{"size":207,"mtime":1612052134178,"results":"6","hashOfConfig":"7"},{"size":4652,"mtime":1615596134702,"results":"8","hashOfConfig":"7"},{"size":2792,"mtime":1618075149783,"results":"9","hashOfConfig":"7"},{"size":2099,"mtime":1612133310304,"results":"10","hashOfConfig":"7"},{"size":3578,"mtime":1618075162780,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1n8ghgd",{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\main\\react-apps\\REACT\\react-app-1\\src\\index.js",[],["24","25"],"D:\\main\\react-apps\\REACT\\react-app-1\\src\\App.js",["26","27","28","29","30","31"],"import React, { useState } from \"react\";\nimport BubbleChart from \"./components/BubbleChart\";\nimport LineChart from \"./components/LineChart\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\nconst App = () => {\n    const [low, setLow] = useState([]);\n    const [high, setHigh] = useState([]);\n    const [open, setOpen] = useState([]);\n    const [date, setDate] = useState([]);\n    const [userInput, setUserInput] = useState(\"\");\n    const [company, setCompany] = useState([]);\n    const [other, setOther] = useState([]);\n    const Base_url = \"http://api.marketstack.com/v1\";\n    const key = \"0469640507c513d9311110af33d220a6\";\n\n    const getData = (json_data) => {\n        const stock_open = [];\n        const stock_high = [];\n        const stock_low = [];\n        const stock_date = [];\n        var static_num_vaibhav = json_data.pagination.count;\n\n        for (var i = 0; i < static_num_vaibhav; i++) {\n            stock_open.push(parseFloat(json_data.data.eod[i].open));\n            stock_high.push(parseFloat(json_data.data.eod[i].high));\n            stock_low.push(parseFloat(json_data.data.eod[i].low));\n            stock_date.push(json_data.data.eod[i].date);\n        }\n        setLow(stock_low);\n        setHigh(stock_high);\n        setOpen(stock_open);\n        setDate(stock_date);\n        setCompany(json_data.data.name);\n    };\n\n    //`${Base_url}/eod?access_key=${key}&symbols=${userInput}`\n    //http://api.marketstack.com/v1/tickers/AMZN/eod?access_key=0469640507c513d9311110af33d220a6\n\n    const callAPI = async () => {\n        try {\n            const response = await fetch(\n                `${Base_url}/tickers/${userInput}/eod?access_key=${key}`\n            );\n            setUserInput(\"\");\n\n            if (response.status === 422) {\n                throw new Error(\n                    \"It seems that entered NASDAQ\\n Stock Exchange symbol Doesnot exist\\n please enter NASDAQ key again\\n eg. amzn, aapl, intl \"\n                );\n            } else if (response.status === 404) {\n                throw new Error(\n                    \"It seems that entered NASDAQ\\n Stock Exchange symbol Doesnot exist\\n please enter NASDAQ key again\\n eg. amzn, aapl, intl \"\n                );\n            } else {\n                const data_json = await response.json();\n                getData(data_json);\n            }\n        } catch (error) {\n            window.alert(error);\n        }\n    };\n\n    const callAPI_header = async () => {\n        //http://api.marketstack.com/v1/tickers/AAPL/intraday/latest?access_key=0469640507c513d9311110af33d220a6\n\n        const response2 = await fetch(\n            `${Base_url}/tickers/${userInput}/intraday/latest?access_key=${key}`\n        );\n        const data_json2 = await response2.json();\n        //other_array.push(data_json2);\n\n        setOther(data_json2);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        callAPI();\n        callAPI_header();\n    };\n\n    return (\n        <div className=\"app\">\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter NASDAQ eg. amzn\"\n                    onChange={(e) => {\n                        e.preventDefault();\n                        setUserInput(e.currentTarget.value.toUpperCase());\n                    }}\n                    className=\"dataInput\"\n                />\n            </form>\n\n            <Header data={other} company={company} />\n            {company.length !== 0 ? (\n                <div className=\"displayChart\">\n                    {/* <BubbleChart\n                        data_low={low}\n                        data_high={high}\n                        data_open={open}\n                        data_date={date}\n                        className=\"lineChart\"\n                    />\n                    <LineChart\n                        data_low={low}\n                        data_high={high}\n                        data_open={open}\n                        data_date={date}\n                        className=\"lineChart\"\n                    /> */}\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default App;\n\n//useEffect(async () => {\n//   const response = await fetch(\n//     `${Base_url}/eod?access_key=${key}&symbols=AMZN`\n//   );\n//  const json_data = await response.json();\n//  getData(json_data);\n//}, [count]);\n\n//for (var i = 0; i < static_num_vaibhav; i++) {\n//   stock_open.push(parseFloat(json_data.data[i].open));\n//   stock_high.push(parseFloat(json_data.data[i].high));\n//   stock_low.push(parseFloat(json_data.data[i].low));\n//    stock_date.push(json_data.data[i].date);\n//}\n","D:\\main\\react-apps\\REACT\\react-app-1\\src\\components\\BubbleChart.js",[],"D:\\main\\react-apps\\REACT\\react-app-1\\src\\components\\Header.js",[],"D:\\main\\react-apps\\REACT\\react-app-1\\src\\components\\LineChart.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":17},{"ruleId":"36","severity":1,"message":"41","line":8,"column":12,"nodeType":"38","messageId":"39","endLine":8,"endColumn":15},{"ruleId":"36","severity":1,"message":"42","line":9,"column":12,"nodeType":"38","messageId":"39","endLine":9,"endColumn":16},{"ruleId":"36","severity":1,"message":"43","line":10,"column":12,"nodeType":"38","messageId":"39","endLine":10,"endColumn":16},{"ruleId":"36","severity":1,"message":"44","line":11,"column":12,"nodeType":"38","messageId":"39","endLine":11,"endColumn":16},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'BubbleChart' is defined but never used.","Identifier","unusedVar","'LineChart' is defined but never used.","'low' is assigned a value but never used.","'high' is assigned a value but never used.","'open' is assigned a value but never used.","'date' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]